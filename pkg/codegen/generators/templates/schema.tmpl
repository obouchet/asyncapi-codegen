{{define "schema" -}}

{{- /* Custom Go type */ -}}
{{- if .ExtGoType -}}
{{ .ExtGoType }}

{{- else if .Type -}}

{{- /* Type Object */ -}}
{{- if or (eq .Type "object") .Properties -}}struct {
    {{- range $key, $value := .Properties -}}
    {{if $value.Description}}
    // Description: {{multiLineComment $value.Description}}
    {{else if and $value.ReferenceTo $value.ReferenceTo.Description}}
    // Description: {{$value.ReferenceTo.Description}}
    {{end -}}
    {{namify $key}} {{if and (not (isRequired $ $key)) (ne $value.Type "array")}}*{{end}}{{template "schema" $value}} `json:
    {{- if .UseStandardGoJson -}}
    "{{standardGoJson $key}}"
    {{- else -}}
    "{{snakeCase $key}}"
    {{- end -}}
    {{- if and (isRequired $ $key) (eq .Type "string")}} validate:"required"
    {{- else if and (isRequired $ $key) (eq .Type "String")}} validate:"requiredString"
    {{- else if and (isRequired $ $key) (eq .Type "Integer")}} validate:"requiredInteger"
    {{- else if and (isRequired $ $key) (eq .Type "Number") (eq .Format "double")}} validate:"requiredFloat64"
    {{- end}}`
    {{end -}}
}

{{- /* Type Boolean */ -}}
{{- else if eq .Type "boolean" -}}
bool

{{- /* Type String */ -}}
{{- else if eq .Type "string" -}}
{{- if or (eq .Format "date") (eq .Format "date-time") -}}
time.Time
{{- else -}}
string
{{- end -}}

{{- /* Type Custom String */ -}}
{{- else if eq .Type "String" -}}
String

{{- /* Type Custom Integer */ -}}
{{- else if eq .Type "Integer" -}}
Integer

{{- /* Type Custom Float64 */ -}}
{{- else if and (eq .Type "Number") (eq .Format "double") -}}
Float64

{{- /* Type Integer */ -}}
{{- else if eq .Type "integer" -}}
{{- if and .Format (eq .Format "int32") -}}
int32
{{- else -}}
int64
{{- end -}}

{{- /* Type Array */ -}}
{{- else if eq .Type "array" -}}
[]{{- template "schema" .Items -}}

{{- /* Type Number */ -}}
{{- else if eq .Type "number" -}}
{{- if and .Format (eq .Format "float") -}}
float32
{{- else -}}
float64
{{- end -}}

{{- /* Unknown type */ -}}
{{- else -}}
// WARNING: no generation occured here as it has unknown type '{{.Type}}'
{{- end -}}

{{- /* AnyOf or OneOf */ -}}
{{- else if or .AnyOf .OneOf -}}
{{$xxxOf := $.AnyOf}}{{- if .OneOf }}{{$xxxOf = $.OneOf}}{{end -}}

struct {
    {{- if .OneOf }}
    // WARNING: only one of the following field can be used
    {{ end }}

{{- range  $key, $value := $xxxOf}}
    // {{ if $value.Reference}}{{ referenceToTypeName .Reference }}{{else}}AnyOf{{$key}}{{end}}
{{- if $value.Description}}
    // Description: {{multiLineComment $value.Description}}
{{- end}}
    {{ if $value.Reference}}{{ referenceToTypeName .Reference }}{{else}}AnyOf{{$key}}{{end}} *{{template "schema" $value}}
{{end -}}
}

{{- /* If no know type but reference a component */ -}}
{{- else if .Reference -}}
{{ referenceToTypeName .Reference }}Schema

{{- /* Should not get to this point */ -}}
{{- else -}}
// WARNING: potential error in AsyncAPI generation
// Infos on type: {{ describeStruct . }}
{{- end -}}

{{- end -}}
